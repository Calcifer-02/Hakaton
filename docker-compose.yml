services:
  # MongoDB для auth service
  mongodb:
    image: mongo:7
    container_name: hakaton-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: hakaton_secure_pass_2025
    volumes:
      - mongodb_data:/data/db
    networks:
      - hakaton-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: hakaton-auth
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:hakaton_secure_pass_2025@mongodb:27017/?authSource=admin
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - hakaton-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hakaton-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - AUTH_SERVICE_URL=http://auth:5000
      - REQUIRE_AUTH=false
    volumes:
      - backend_data:/app/database
    networks:
      - hakaton-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hakaton-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - NEXT_PUBLIC_AUTH_URL=http://localhost:5000
      - API_BASE_URL=http://backend:4000
      - AUTH_LOGIN_URL=http://localhost:5000
    depends_on:
      - backend
      - auth
    networks:
      - hakaton-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  backend_data:
    driver: local

networks:
  hakaton-network:
    driver: bridge
