{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/hakaton/frontend/src/app/map/MapView.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Enterprise } from '../types/enterprise';\r\n\r\n// Фикс для иконок Leaflet в Next.js\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n});\r\n\r\n// Цвета для разных отраслей\r\nconst getIndustryColor = (industry: string): string => {\r\n  const colors: Record<string, string> = {\r\n    'Машиностроение': '#3B82F6',\r\n    'Пищевая промышленность': '#10B981',\r\n    'Химическая промышленность': '#F59E0B',\r\n    'Текстильная промышленность': '#EC4899',\r\n    'Металлургия': '#6B7280',\r\n    'Электроника': '#8B5CF6',\r\n    'Строительные материалы': '#EF4444',\r\n    'Фармацевтика': '#14B8A6',\r\n    'Автомобилестроение': '#F97316',\r\n    'Полиграфия': '#06B6D4',\r\n    'Другое': '#9CA3AF'\r\n  };\r\n\r\n  return colors[industry] || '#9CA3AF';\r\n};\r\n\r\n// Создание кастомной иконки для маркера\r\nconst createCustomIcon = (industry: string) => {\r\n  const color = getIndustryColor(industry);\r\n\r\n  return L.divIcon({\r\n    className: 'custom-marker',\r\n    html: `\r\n      <div style=\"\r\n        background-color: ${color};\r\n        width: 30px;\r\n        height: 30px;\r\n        border-radius: 50% 50% 50% 0;\r\n        transform: rotate(-45deg);\r\n        border: 3px solid white;\r\n        box-shadow: 0 2px 8px rgba(0,0,0,0.3);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      \">\r\n        <div style=\"\r\n          width: 8px;\r\n          height: 8px;\r\n          background-color: white;\r\n          border-radius: 50%;\r\n          transform: rotate(45deg);\r\n        \"></div>\r\n      </div>\r\n    `,\r\n    iconSize: [30, 30],\r\n    iconAnchor: [15, 30],\r\n    popupAnchor: [0, -30]\r\n  });\r\n};\r\n\r\n// Компонент для автоматического подстраивания границ карты\r\nfunction MapBoundsUpdater({ enterprises }: { enterprises: Enterprise[] }) {\r\n  const map = useMap();\r\n\r\n  useEffect(() => {\r\n    if (enterprises.length > 0) {\r\n      const bounds = enterprises\r\n        .filter(e => e.latitude && e.longitude)\r\n        .map(e => [e.latitude!, e.longitude!] as [number, number]);\r\n\r\n      if (bounds.length > 0) {\r\n        map.fitBounds(bounds, { padding: [50, 50] });\r\n      }\r\n    }\r\n  }, [enterprises, map]);\r\n\r\n  return null;\r\n}\r\n\r\ninterface MapViewProps {\r\n  enterprises: Enterprise[];\r\n  onMarkerClick: (enterprise: Enterprise) => void;\r\n}\r\n\r\nexport default function MapView({ enterprises, onMarkerClick }: MapViewProps) {\r\n  // Центр Москвы (Кремль)\r\n  const moscowCenter: [number, number] = [55.7558, 37.6173];\r\n\r\n  return (\r\n    <MapContainer\r\n      center={moscowCenter}\r\n      zoom={10}\r\n      style={{ height: '100%', width: '100%' }}\r\n      className=\"z-0\"\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      <MapBoundsUpdater enterprises={enterprises} />\r\n\r\n      {enterprises.map((enterprise) => {\r\n        if (!enterprise.latitude || !enterprise.longitude ||\r\n            isNaN(enterprise.latitude) || isNaN(enterprise.longitude)) {\r\n          return null;\r\n        }\r\n\r\n        return (\r\n          <Marker\r\n            key={enterprise.id}\r\n            position={[enterprise.latitude, enterprise.longitude]}\r\n            icon={createCustomIcon(enterprise.industry)}\r\n            eventHandlers={{\r\n              click: () => onMarkerClick(enterprise)\r\n            }}\r\n          >\r\n            <Popup>\r\n              <div className=\"min-w-[200px]\">\r\n                <h3 className=\"font-bold text-gray-900 mb-2\">{enterprise.name}</h3>\r\n                <div className=\"space-y-1 text-sm\">\r\n                  <p className=\"text-gray-600\">\r\n                    <span className=\"font-medium\">Отрасль:</span> {enterprise.industry}\r\n                  </p>\r\n                  <p className=\"text-gray-600\">\r\n                    <span className=\"font-medium\">Регион:</span> {enterprise.region}\r\n                  </p>\r\n                  <p className=\"text-gray-600\">\r\n                    <span className=\"font-medium\">Адрес:</span> {enterprise.contactInfo.address}\r\n                  </p>\r\n                  <p className=\"text-gray-600\">\r\n                    <span className=\"font-medium\">Сотрудники:</span> {enterprise.employees.toLocaleString('ru-RU')}\r\n                  </p>\r\n                </div>\r\n                <button\r\n                  onClick={() => onMarkerClick(enterprise)}\r\n                  className=\"mt-3 w-full bg-blue-600 text-white px-3 py-1.5 rounded text-sm font-medium hover:bg-blue-700 transition-colors\"\r\n                >\r\n                  Подробнее\r\n                </button>\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      })}\r\n    </MapContainer>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}