{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/hakaton/frontend/src/app/lib/data-utils.ts"],"sourcesContent":["import * as XLSX from 'xlsx';\r\nimport Papa from 'papaparse';\r\nimport { Enterprise, UploadResult } from '../types/enterprise';\r\n\r\n// Московские регионы\r\nexport const MOSCOW_REGIONS = [\r\n  'Центральный',\r\n  'Северный',\r\n  'Северо-Восточный',\r\n  'Восточный',\r\n  'Юго-Восточный',\r\n  'Южный',\r\n  'Юго-Западный',\r\n  'Западный',\r\n  'Северо-Западный',\r\n  'Новомосковский',\r\n  'Троицкий'\r\n];\r\n\r\n// Основные отрасли промышленности\r\nexport const INDUSTRIES = [\r\n  'Машиностроение',\r\n  'Пищевая промышленность',\r\n  'Химическая промышленность',\r\n  'Текстильная промышленность',\r\n  'Металлургия',\r\n  'Электроника',\r\n  'Строительные материалы',\r\n  'Фармацевтика',\r\n  'Автомобилестроение',\r\n  'Полиграфия',\r\n  'Другое'\r\n];\r\n\r\n// Валидация данных предприятия\r\nexport const validateEnterprise = (data: Record<string, unknown>): { isValid: boolean; errors: string[] } => {\r\n  const errors: string[] = [];\r\n\r\n  if (!data.name || typeof data.name !== 'string') {\r\n    errors.push('Некорректное название предприятия');\r\n  }\r\n\r\n  if (!data.industry || !INDUSTRIES.includes(data.industry as string)) {\r\n    errors.push('Некорректная отрасль');\r\n  }\r\n\r\n  if (!data.region || !MOSCOW_REGIONS.includes(data.region as string)) {\r\n    errors.push('Некорректный регион');\r\n  }\r\n\r\n  if (!data.employees || Number(data.employees) < 0) {\r\n    errors.push('Некорректное количество сотрудников');\r\n  }\r\n\r\n  if (!data.revenue || Number(data.revenue) < 0) {\r\n    errors.push('Некорректная выручка');\r\n  }\r\n\r\n  const contactInfo = data.contactInfo as Record<string, unknown> | undefined;\r\n  if (!contactInfo?.address) {\r\n    errors.push('Отсутствует адрес');\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n};\r\n\r\n// Парсинг CSV файла\r\nexport const parseCSV = (file: File): Promise<UploadResult> => {\r\n  return new Promise((resolve) => {\r\n    Papa.parse(file, {\r\n      header: true,\r\n      complete: (results) => {\r\n        const enterprises: Enterprise[] = [];\r\n        const errors: string[] = [];\r\n        let errorCount = 0;\r\n\r\n        results.data.forEach((row: unknown, index: number) => {\r\n          const rowData = row as Record<string, unknown>;\r\n          const validation = validateEnterprise(rowData);\r\n\r\n          if (validation.isValid) {\r\n            const enterprise: Enterprise = {\r\n              id: crypto.randomUUID(),\r\n              name: String(rowData.name),\r\n              industry: String(rowData.industry),\r\n              region: String(rowData.region),\r\n              employees: parseInt(String(rowData.employees)) || 0,\r\n              revenue: parseFloat(String(rowData.revenue)) || 0,\r\n              taxesPaid: parseFloat(String(rowData.taxesPaid)) || 0,\r\n              registrationDate: new Date(String(rowData.registrationDate) || Date.now()),\r\n              lastUpdated: new Date(),\r\n              status: (rowData.status as 'active' | 'inactive' | 'suspended') || 'active',\r\n              contactInfo: {\r\n                address: String(rowData.address),\r\n                phone: String(rowData.phone || ''),\r\n                email: String(rowData.email || '')\r\n              }\r\n            };\r\n            enterprises.push(enterprise);\r\n          } else {\r\n            errorCount++;\r\n            errors.push(`Строка ${index + 1}: ${validation.errors.join(', ')}`);\r\n          }\r\n        });\r\n\r\n        resolve({\r\n          success: true,\r\n          message: `Обработано ${enterprises.length} записей из ${results.data.length}`,\r\n          processedCount: enterprises.length,\r\n          errorCount,\r\n          errors,\r\n          data: enterprises\r\n        });\r\n      },\r\n      error: (error) => {\r\n        resolve({\r\n          success: false,\r\n          message: `Ошибка парсинга CSV: ${error.message}`,\r\n          processedCount: 0,\r\n          errorCount: 1,\r\n          errors: [error.message]\r\n        });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n// Парсинг Excel файла\r\nexport const parseExcel = (file: File): Promise<UploadResult> => {\r\n  return new Promise((resolve) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n      try {\r\n        const data = e.target?.result;\r\n        const workbook = XLSX.read(data, { type: 'binary' });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const worksheet = workbook.Sheets[sheetName];\r\n        const jsonData = XLSX.utils.sheet_to_json(worksheet);\r\n\r\n        const enterprises: Enterprise[] = [];\r\n        const errors: string[] = [];\r\n        let errorCount = 0;\r\n\r\n        jsonData.forEach((row: unknown, index: number) => {\r\n          const rowData = row as Record<string, unknown>;\r\n          const validation = validateEnterprise(rowData);\r\n\r\n          if (validation.isValid) {\r\n            const enterprise: Enterprise = {\r\n              id: crypto.randomUUID(),\r\n              name: String(rowData.name),\r\n              industry: String(rowData.industry),\r\n              region: String(rowData.region),\r\n              employees: parseInt(String(rowData.employees)) || 0,\r\n              revenue: parseFloat(String(rowData.revenue)) || 0,\r\n              taxesPaid: parseFloat(String(rowData.taxesPaid)) || 0,\r\n              registrationDate: new Date(String(rowData.registrationDate) || Date.now()),\r\n              lastUpdated: new Date(),\r\n              status: (rowData.status as 'active' | 'inactive' | 'suspended') || 'active',\r\n              contactInfo: {\r\n                address: String(rowData.address),\r\n                phone: String(rowData.phone || ''),\r\n                email: String(rowData.email || '')\r\n              }\r\n            };\r\n            enterprises.push(enterprise);\r\n          } else {\r\n            errorCount++;\r\n            errors.push(`Строка ${index + 1}: ${validation.errors.join(', ')}`);\r\n          }\r\n        });\r\n\r\n        resolve({\r\n          success: true,\r\n          message: `Обработано ${enterprises.length} записей из ${jsonData.length}`,\r\n          processedCount: enterprises.length,\r\n          errorCount,\r\n          errors,\r\n          data: enterprises\r\n        });\r\n      } catch (error) {\r\n        resolve({\r\n          success: false,\r\n          message: `Ошибка парсинга Excel: ${(error as Error).message}`,\r\n          processedCount: 0,\r\n          errorCount: 1,\r\n          errors: [(error as Error).message]\r\n        });\r\n      }\r\n    };\r\n\r\n    reader.readAsBinaryString(file);\r\n  });\r\n};\r\n\r\n// Форматирование чисел\r\nexport const formatNumber = (num: number): string => {\r\n  return new Intl.NumberFormat('ru-RU').format(num);\r\n};\r\n\r\n// Форматирование валюты\r\nexport const formatCurrency = (amount: number): string => {\r\n  return new Intl.NumberFormat('ru-RU', {\r\n    style: 'currency',\r\n    currency: 'RUB'\r\n  }).format(amount);\r\n};\r\n\r\n// Генерация случайных данных для демонстрации\r\nexport const generateSampleData = (count: number = 100): Enterprise[] => {\r\n  const sampleData: Enterprise[] = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const enterprise: Enterprise = {\r\n      id: crypto.randomUUID(),\r\n      name: `Предприятие ${i + 1}`,\r\n      industry: INDUSTRIES[Math.floor(Math.random() * INDUSTRIES.length)],\r\n      region: MOSCOW_REGIONS[Math.floor(Math.random() * MOSCOW_REGIONS.length)],\r\n      employees: Math.floor(Math.random() * 1000) + 10,\r\n      revenue: Math.floor(Math.random() * 100000000) + 1000000,\r\n      taxesPaid: Math.floor(Math.random() * 10000000) + 100000,\r\n      registrationDate: new Date(Date.now() - Math.random() * 365 * 24 * 60 * 60 * 1000 * 5),\r\n      lastUpdated: new Date(),\r\n      status: Math.random() > 0.1 ? 'active' : Math.random() > 0.5 ? 'inactive' : 'suspended',\r\n      contactInfo: {\r\n        address: `Москва, улица ${i + 1}, дом ${Math.floor(Math.random() * 100) + 1}`,\r\n        phone: `+7-495-${Math.floor(Math.random() * 900) + 100}-${Math.floor(Math.random() * 90) + 10}-${Math.floor(Math.random() * 90) + 10}`,\r\n        email: `contact${i + 1}@enterprise.ru`\r\n      }\r\n    };\r\n    sampleData.push(enterprise);\r\n  }\r\n\r\n  return sampleData;\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/hakaton/frontend/src/app/upload/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { Upload, FileText, AlertCircle, CheckCircle, X } from 'lucide-react';\r\nimport { parseCSV, parseExcel } from '../lib/data-utils';\r\nimport { UploadResult } from '../types/enterprise';\r\n\r\nexport default function UploadPage() {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [uploadResult, setUploadResult] = useState<UploadResult | null>(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length > 0) {\r\n      handleFileUpload(files[0]);\r\n    }\r\n  }, []);\r\n\r\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (files && files.length > 0) {\r\n      handleFileUpload(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (file: File) => {\r\n    setIsUploading(true);\r\n    setUploadResult(null);\r\n\r\n    try {\r\n      let result: UploadResult;\r\n\r\n      if (file.name.endsWith('.csv')) {\r\n        result = await parseCSV(file);\r\n      } else if (file.name.endsWith('.xlsx') || file.name.endsWith('.xls')) {\r\n        result = await parseExcel(file);\r\n      } else {\r\n        result = {\r\n          success: false,\r\n          message: 'Неподдерживаемый формат файла. Поддерживаются только CSV и Excel файлы.',\r\n          processedCount: 0,\r\n          errorCount: 1,\r\n          errors: ['Неподдерживаемый формат файла']\r\n        };\r\n      }\r\n\r\n      setUploadResult(result);\r\n    } catch (error) {\r\n      setUploadResult({\r\n        success: false,\r\n        message: `Ошибка при обработке файла: ${(error as Error).message}`,\r\n        processedCount: 0,\r\n        errorCount: 1,\r\n        errors: [(error as Error).message]\r\n      });\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const clearResults = () => {\r\n    setUploadResult(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto space-y-8\">\r\n      {/* Заголовок */}\r\n      <div>\r\n        <h1 className=\"text-3xl font-bold text-gray-900\">Загрузка данных предприятий</h1>\r\n        <p className=\"text-gray-600 mt-2\">\r\n          Загрузите файл CSV или Excel с данными о предприятиях Москвы для анализа\r\n        </p>\r\n      </div>\r\n\r\n      {/* Зона загрузки */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border\">\r\n        <div\r\n          className={`\r\n            border-2 border-dashed rounded-lg p-12 text-center transition-colors\r\n            ${isDragging \r\n              ? 'border-blue-400 bg-blue-50' \r\n              : 'border-gray-300 hover:border-gray-400'\r\n            }\r\n          `}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onDrop={handleDrop}\r\n        >\r\n          <div className=\"flex flex-col items-center space-y-4\">\r\n            <div className=\"p-4 bg-gray-100 rounded-full\">\r\n              <Upload className=\"w-8 h-8 text-gray-600\" />\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                Перетащите файл сюда или выберите файл\r\n              </h3>\r\n              <p className=\"text-gray-500 mt-1\">\r\n                Поддерживаются форматы: CSV, Excel (XLSX, XLS)\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col sm:flex-row gap-4\">\r\n              <label className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 cursor-pointer transition-colors\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".csv,.xlsx,.xls\"\r\n                  onChange={handleFileSelect}\r\n                  className=\"hidden\"\r\n                />\r\n                Выбрать файл\r\n              </label>\r\n\r\n              <button\r\n                onClick={() => {\r\n                  // Загружаем демонстрационные данные\r\n                  const demoResult: UploadResult = {\r\n                    success: true,\r\n                    message: 'Загружены демонстрационные данные',\r\n                    processedCount: 100,\r\n                    errorCount: 5,\r\n                    errors: [\r\n                      'Строка 15: Некорректная отрасль',\r\n                      'Строка 23: Отсутствует адрес',\r\n                      'Строка 34: Некорректное количество сотрудников',\r\n                      'Строка 67: Некорректный регион',\r\n                      'Строка 89: Некорректная выручка'\r\n                    ]\r\n                  };\r\n                  setUploadResult(demoResult);\r\n                }}\r\n                className=\"border border-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-50 transition-colors\"\r\n              >\r\n                Загрузить демо-данные\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Индикатор загрузки */}\r\n      {isUploading && (\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"></div>\r\n            <div>\r\n              <p className=\"font-medium text-blue-900\">Обработка файла...</p>\r\n              <p className=\"text-blue-700 text-sm\">Пожалуйста, подождите</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Результат загрузки */}\r\n      {uploadResult && (\r\n        <div className={`\r\n          rounded-lg p-6 border\r\n          ${uploadResult.success \r\n            ? 'bg-green-50 border-green-200' \r\n            : 'bg-red-50 border-red-200'\r\n          }\r\n        `}>\r\n          <div className=\"flex items-start justify-between\">\r\n            <div className=\"flex items-start space-x-3\">\r\n              {uploadResult.success ? (\r\n                <CheckCircle className=\"w-6 h-6 text-green-600 flex-shrink-0\" />\r\n              ) : (\r\n                <AlertCircle className=\"w-6 h-6 text-red-600 flex-shrink-0\" />\r\n              )}\r\n              <div>\r\n                <h3 className={`font-semibold ${\r\n                  uploadResult.success ? 'text-green-900' : 'text-red-900'\r\n                }`}>\r\n                  {uploadResult.success ? 'Загрузка завершена' : 'Ошибка загрузки'}\r\n                </h3>\r\n                <p className={`mt-1 ${\r\n                  uploadResult.success ? 'text-green-700' : 'text-red-700'\r\n                }`}>\r\n                  {uploadResult.message}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={clearResults}\r\n              className=\"text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <X className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Статистика */}\r\n          <div className=\"mt-4 grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n            <div className=\"bg-white p-4 rounded-lg border\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-2xl font-bold text-green-600\">{uploadResult.processedCount}</p>\r\n                <p className=\"text-sm text-gray-600\">Обработано записей</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-white p-4 rounded-lg border\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-2xl font-bold text-red-600\">{uploadResult.errorCount}</p>\r\n                <p className=\"text-sm text-gray-600\">Ошибок</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Ошибки */}\r\n          {uploadResult.errors.length > 0 && (\r\n            <div className=\"mt-4\">\r\n              <h4 className=\"font-medium text-gray-900 mb-2\">Найденные ошибки:</h4>\r\n              <div className=\"bg-white rounded-lg border max-h-40 overflow-y-auto\">\r\n                <div className=\"p-4 space-y-2\">\r\n                  {uploadResult.errors.slice(0, 10).map((error, index) => (\r\n                    <div key={index} className=\"flex items-start space-x-2\">\r\n                      <div className=\"w-2 h-2 bg-red-400 rounded-full mt-2 flex-shrink-0\"></div>\r\n                      <p className=\"text-sm text-gray-700\">{error}</p>\r\n                    </div>\r\n                  ))}\r\n                  {uploadResult.errors.length > 10 && (\r\n                    <p className=\"text-sm text-gray-500 italic\">\r\n                      И ещё {uploadResult.errors.length - 10} ошибок...\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Инструкции */}\r\n      <div className=\"bg-gray-50 rounded-lg p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Формат данных</h3>\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-gray-700\">\r\n            Файл должен содержать следующие столбцы:\r\n          </p>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">name</span> - Название предприятия\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">industry</span> - Отрасль\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">region</span> - Регион Москвы\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">employees</span> - Количество сотрудников\r\n              </div>\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">revenue</span> - Выручка (руб.)\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">address</span> - Адрес\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">phone</span> - Телефон (опционально)\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">email</span> - Email (опционально)\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAJA;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAC;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,yKAAQ,EAAsB;IACtE,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,yKAAQ,EAAC;IAE/C,MAAM,iBAAiB,IAAA,4KAAW;kDAAC,CAAC;YAClC,EAAE,cAAc;YAChB,cAAc;QAChB;iDAAG,EAAE;IAEL,MAAM,kBAAkB,IAAA,4KAAW;mDAAC,CAAC;YACnC,EAAE,cAAc;YAChB,cAAc;QAChB;kDAAG,EAAE;IAEL,MAAM,aAAa,IAAA,4KAAW;8CAAC,CAAC;YAC9B,EAAE,cAAc;YAChB,cAAc;YACd,MAAM,QAAQ,MAAM,IAAI,CAAC,EAAE,YAAY,CAAC,KAAK;YAC7C,IAAI,MAAM,MAAM,GAAG,GAAG;gBACpB,iBAAiB,KAAK,CAAC,EAAE;YAC3B;QACF;6CAAG,EAAE;IAEL,MAAM,mBAAmB,CAAC;QACxB,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;QAC5B,IAAI,SAAS,MAAM,MAAM,GAAG,GAAG;YAC7B,iBAAiB,KAAK,CAAC,EAAE;QAC3B;IACF;IAEA,MAAM,mBAAmB,OAAO;QAC9B,eAAe;QACf,gBAAgB;QAEhB,IAAI;YACF,IAAI;YAEJ,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,SAAS;gBAC9B,SAAS,MAAM,IAAA,iJAAQ,EAAC;YAC1B,OAAO,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,YAAY,KAAK,IAAI,CAAC,QAAQ,CAAC,SAAS;gBACpE,SAAS,MAAM,IAAA,mJAAU,EAAC;YAC5B,OAAO;gBACL,SAAS;oBACP,SAAS;oBACT,SAAS;oBACT,gBAAgB;oBAChB,YAAY;oBACZ,QAAQ;wBAAC;qBAAgC;gBAC3C;YACF;YAEA,gBAAgB;QAClB,EAAE,OAAO,OAAO;YACd,gBAAgB;gBACd,SAAS;gBACT,SAAS,AAAC,+BAAuD,OAAzB,AAAC,MAAgB,OAAO;gBAChE,gBAAgB;gBAChB,YAAY;gBACZ,QAAQ;oBAAE,MAAgB,OAAO;iBAAC;YACpC;QACF,SAAU;YACR,eAAe;QACjB;IACF;IAEA,MAAM,eAAe;QACnB,gBAAgB;IAClB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAMpC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,WAAW,AAAC,mGAKT,OAHC,aACE,+BACA,yCACH;oBAEH,YAAY;oBACZ,aAAa;oBACb,QAAQ;8BAER,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,mNAAM;oCAAC,WAAU;;;;;;;;;;;0CAGpB,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;kDAAsC;;;;;;kDAGpD,6LAAC;wCAAE,WAAU;kDAAqB;;;;;;;;;;;;0CAKpC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAM,WAAU;;0DACf,6LAAC;gDACC,MAAK;gDACL,QAAO;gDACP,UAAU;gDACV,WAAU;;;;;;4CACV;;;;;;;kDAIJ,6LAAC;wCACC,SAAS;4CACP,oCAAoC;4CACpC,MAAM,aAA2B;gDAC/B,SAAS;gDACT,SAAS;gDACT,gBAAgB;gDAChB,YAAY;gDACZ,QAAQ;oDACN;oDACA;oDACA;oDACA;oDACA;iDACD;4CACH;4CACA,gBAAgB;wCAClB;wCACA,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;YASR,6BACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;;;;;sCACf,6LAAC;;8CACC,6LAAC;oCAAE,WAAU;8CAA4B;;;;;;8CACzC,6LAAC;oCAAE,WAAU;8CAAwB;;;;;;;;;;;;;;;;;;;;;;;YAO5C,8BACC,6LAAC;gBAAI,WAAW,AAAC,gDAKd,OAHC,aAAa,OAAO,GAClB,iCACA,4BACH;;kCAED,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;oCACZ,aAAa,OAAO,iBACnB,6LAAC,6OAAW;wCAAC,WAAU;;;;;6DAEvB,6LAAC,sOAAW;wCAAC,WAAU;;;;;;kDAEzB,6LAAC;;0DACC,6LAAC;gDAAG,WAAW,AAAC,iBAEf,OADC,aAAa,OAAO,GAAG,mBAAmB;0DAEzC,aAAa,OAAO,GAAG,uBAAuB;;;;;;0DAEjD,6LAAC;gDAAE,WAAW,AAAC,QAEd,OADC,aAAa,OAAO,GAAG,mBAAmB;0DAEzC,aAAa,OAAO;;;;;;;;;;;;;;;;;;0CAI3B,6LAAC;gCACC,SAAS;gCACT,WAAU;0CAEV,cAAA,6LAAC,oMAAC;oCAAC,WAAU;;;;;;;;;;;;;;;;;kCAKjB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAE,WAAU;sDAAqC,aAAa,cAAc;;;;;;sDAC7E,6LAAC;4CAAE,WAAU;sDAAwB;;;;;;;;;;;;;;;;;0CAGzC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAE,WAAU;sDAAmC,aAAa,UAAU;;;;;;sDACvE,6LAAC;4CAAE,WAAU;sDAAwB;;;;;;;;;;;;;;;;;;;;;;;oBAM1C,aAAa,MAAM,CAAC,MAAM,GAAG,mBAC5B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAiC;;;;;;0CAC/C,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;wCACZ,aAAa,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,sBAC5C,6LAAC;gDAAgB,WAAU;;kEACzB,6LAAC;wDAAI,WAAU;;;;;;kEACf,6LAAC;wDAAE,WAAU;kEAAyB;;;;;;;+CAF9B;;;;;wCAKX,aAAa,MAAM,CAAC,MAAM,GAAG,oBAC5B,6LAAC;4CAAE,WAAU;;gDAA+B;gDACnC,aAAa,MAAM,CAAC,MAAM,GAAG;gDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAWvD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA2C;;;;;;kCACzD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;0CAAgB;;;;;;0CAG7B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,6NAAQ;wDAAC,WAAU;;;;;;kEACpB,6LAAC;wDAAK,WAAU;kEAAc;;;;;;oDAAW;;;;;;;0DAE3C,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,6NAAQ;wDAAC,WAAU;;;;;;kEACpB,6LAAC;wDAAK,WAAU;kEAAc;;;;;;oDAAe;;;;;;;0DAE/C,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,6NAAQ;wDAAC,WAAU;;;;;;kEACpB,6LAAC;wDAAK,WAAU;kEAAc;;;;;;oDAAa;;;;;;;0DAE7C,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,6NAAQ;wDAAC,WAAU;;;;;;kEACpB,6LAAC;wDAAK,WAAU;kEAAc;;;;;;oDAAgB;;;;;;;;;;;;;kDAGlD,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,6NAAQ;wDAAC,WAAU;;;;;;kEACpB,6LAAC;wDAAK,WAAU;kEAAc;;;;;;oDAAc;;;;;;;0DAE9C,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,6NAAQ;wDAAC,WAAU;;;;;;kEACpB,6LAAC;wDAAK,WAAU;kEAAc;;;;;;oDAAc;;;;;;;0DAE9C,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,6NAAQ;wDAAC,WAAU;;;;;;kEACpB,6LAAC;wDAAK,WAAU;kEAAc;;;;;;oDAAY;;;;;;;0DAE5C,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,6NAAQ;wDAAC,WAAU;;;;;;kEACpB,6LAAC;wDAAK,WAAU;kEAAc;;;;;;oDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ1D;GA7RwB;KAAA","debugId":null}}]
}