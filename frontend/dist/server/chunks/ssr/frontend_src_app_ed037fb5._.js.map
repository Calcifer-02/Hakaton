{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/hakaton/frontend/src/app/lib/api-client.ts"],"sourcesContent":["// API клиент для работы с бэкендом\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000/api';\r\n\r\n// Функция для получения токена из куки\r\nfunction getAuthToken(): string | null {\r\n  if (typeof document === 'undefined') return null;\r\n\r\n  const cookies = document.cookie.split(';');\r\n  for (const cookie of cookies) {\r\n    const [name, value] = cookie.trim().split('=');\r\n    if (name === 'token' || name === 'auth_token') {\r\n      return value;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// Функция для создания headers с авторизацией\r\nfunction getHeaders(): HeadersInit {\r\n  const headers: HeadersInit = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n\r\n  const token = getAuthToken();\r\n  if (token) {\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n\r\n  return headers;\r\n}\r\n\r\nexport interface ApiResponse<T> {\r\n  success: boolean;\r\n  message?: string;\r\n  data?: T;\r\n  count?: number;\r\n}\r\n\r\nexport interface UploadResponse {\r\n  success: boolean;\r\n  message: string;\r\n  processedCount: number;\r\n  errorCount: number;\r\n  errors: string[];\r\n}\r\n\r\n// Загрузка файла\r\nexport const uploadFile = async (file: File): Promise<UploadResponse> => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n\r\n  const token = getAuthToken();\r\n  const headers: HeadersInit = {};\r\n  if (token) {\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n\r\n  const response = await fetch(`${API_BASE_URL}/upload`, {\r\n    method: 'POST',\r\n    body: formData,\r\n    headers,\r\n    credentials: 'include',\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Ошибка загрузки: ${response.statusText}`);\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// Получение всех предприятий с фильтрами\r\nexport const getEnterprises = async (filters?: {\r\n  industries?: string[];\r\n  regions?: string[];\r\n  status?: string;\r\n  minEmployees?: number;\r\n  maxEmployees?: number;\r\n  minRevenue?: number;\r\n  maxRevenue?: number;\r\n}) => {\r\n  const params = new URLSearchParams();\r\n\r\n  if (filters?.industries) {\r\n    filters.industries.forEach(industry => params.append('industries', industry));\r\n  }\r\n  if (filters?.regions) {\r\n    filters.regions.forEach(region => params.append('regions', region));\r\n  }\r\n  if (filters?.status) {\r\n    params.append('status', filters.status);\r\n  }\r\n  if (filters?.minEmployees !== undefined) {\r\n    params.append('minEmployees', filters.minEmployees.toString());\r\n  }\r\n  if (filters?.maxEmployees !== undefined) {\r\n    params.append('maxEmployees', filters.maxEmployees.toString());\r\n  }\r\n  if (filters?.minRevenue !== undefined) {\r\n    params.append('minRevenue', filters.minRevenue.toString());\r\n  }\r\n  if (filters?.maxRevenue !== undefined) {\r\n    params.append('maxRevenue', filters.maxRevenue.toString());\r\n  }\r\n\r\n  const url = `${API_BASE_URL}/enterprises${params.toString() ? '?' + params.toString() : ''}`;\r\n  const response = await fetch(url, {\r\n    headers: getHeaders(),\r\n    credentials: 'include',\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Ошибка получения данных: ${response.statusText}`);\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// Получение предприятия по ID\r\nexport const getEnterpriseById = async (id: string) => {\r\n  const response = await fetch(`${API_BASE_URL}/enterprises/${id}`, {\r\n    headers: getHeaders(),\r\n    credentials: 'include',\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Ошибка получения данных: ${response.statusText}`);\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// Получение статистики\r\nexport const getStatistics = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/statistics`, {\r\n    headers: getHeaders(),\r\n    credentials: 'include',\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Ошибка получения статистики: ${response.statusText}`);\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// Очистка всех данных\r\nexport const clearAllData = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/enterprises`, {\r\n    method: 'DELETE',\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Ошибка очистки данных: ${response.statusText}`);\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// Проверка здоровья API\r\nexport const checkHealth = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/health`);\r\n    return response.ok;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n"],"names":[],"mappings":"AAAA,mCAAmC;;;;;;;;;;;;;;;AAEnC,MAAM,eAAe,iEAAmC;AAExD,uCAAuC;AACvC,SAAS;IACP,IAAI,OAAO,aAAa,aAAa,OAAO;IAE5C,MAAM,UAAU,SAAS,MAAM,CAAC,KAAK,CAAC;IACtC,KAAK,MAAM,UAAU,QAAS;QAC5B,MAAM,CAAC,MAAM,MAAM,GAAG,OAAO,IAAI,GAAG,KAAK,CAAC;QAC1C,IAAI,SAAS,WAAW,SAAS,cAAc;YAC7C,OAAO;QACT;IACF;IACA,OAAO;AACT;AAEA,8CAA8C;AAC9C,SAAS;IACP,MAAM,UAAuB;QAC3B,gBAAgB;IAClB;IAEA,MAAM,QAAQ;IACd,IAAI,OAAO;QACT,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;IAC9C;IAEA,OAAO;AACT;AAkBO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,IAAI;IACrB,SAAS,MAAM,CAAC,QAAQ;IAExB,MAAM,QAAQ;IACd,MAAM,UAAuB,CAAC;IAC9B,IAAI,OAAO;QACT,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;IAC9C;IAEA,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,OAAO,CAAC,EAAE;QACrD,QAAQ;QACR,MAAM;QACN;QACA,aAAa;IACf;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,iBAAiB,EAAE,SAAS,UAAU,EAAE;IAC3D;IAEA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,iBAAiB,OAAO;IASnC,MAAM,SAAS,IAAI;IAEnB,IAAI,SAAS,YAAY;QACvB,QAAQ,UAAU,CAAC,OAAO,CAAC,CAAA,WAAY,OAAO,MAAM,CAAC,cAAc;IACrE;IACA,IAAI,SAAS,SAAS;QACpB,QAAQ,OAAO,CAAC,OAAO,CAAC,CAAA,SAAU,OAAO,MAAM,CAAC,WAAW;IAC7D;IACA,IAAI,SAAS,QAAQ;QACnB,OAAO,MAAM,CAAC,UAAU,QAAQ,MAAM;IACxC;IACA,IAAI,SAAS,iBAAiB,WAAW;QACvC,OAAO,MAAM,CAAC,gBAAgB,QAAQ,YAAY,CAAC,QAAQ;IAC7D;IACA,IAAI,SAAS,iBAAiB,WAAW;QACvC,OAAO,MAAM,CAAC,gBAAgB,QAAQ,YAAY,CAAC,QAAQ;IAC7D;IACA,IAAI,SAAS,eAAe,WAAW;QACrC,OAAO,MAAM,CAAC,cAAc,QAAQ,UAAU,CAAC,QAAQ;IACzD;IACA,IAAI,SAAS,eAAe,WAAW;QACrC,OAAO,MAAM,CAAC,cAAc,QAAQ,UAAU,CAAC,QAAQ;IACzD;IAEA,MAAM,MAAM,GAAG,aAAa,YAAY,EAAE,OAAO,QAAQ,KAAK,MAAM,OAAO,QAAQ,KAAK,IAAI;IAC5F,MAAM,WAAW,MAAM,MAAM,KAAK;QAChC,SAAS;QACT,aAAa;IACf;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE,SAAS,UAAU,EAAE;IACnE;IAEA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,oBAAoB,OAAO;IACtC,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,aAAa,EAAE,IAAI,EAAE;QAChE,SAAS;QACT,aAAa;IACf;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE,SAAS,UAAU,EAAE;IACnE;IAEA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,gBAAgB;IAC3B,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,WAAW,CAAC,EAAE;QACzD,SAAS;QACT,aAAa;IACf;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,6BAA6B,EAAE,SAAS,UAAU,EAAE;IACvE;IAEA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,eAAe;IAC1B,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,YAAY,CAAC,EAAE;QAC1D,QAAQ;IACV;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,SAAS,UAAU,EAAE;IACjE;IAEA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,cAAc;IACzB,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,OAAO,CAAC;QACrD,OAAO,SAAS,EAAE;IACpB,EAAE,OAAM;QACN,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/hakaton/frontend/src/app/upload/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { Upload, FileText, AlertCircle, CheckCircle, X } from 'lucide-react';\r\nimport { uploadFile } from '../lib/api-client';\r\nimport { UploadResult } from '../types/enterprise';\r\n\r\nexport default function UploadPage() {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [uploadResult, setUploadResult] = useState<UploadResult | null>(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  // Переменные для работы с API2\r\n  const API2 = (process.env.NEXT_PUBLIC_API2_URL || 'http://127.0.0.1:8000/api').replace(/\\/$/, '');\r\n  const [api2File, setApi2File] = useState<File | null>(null);\r\n  const [api2Msg, setApi2Msg] = useState<string>('');\r\n  const [api2Data, setApi2Data] = useState<any[]>([]);\r\n  const [api2Loading, setApi2Loading] = useState(false);\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length > 0) {\r\n      handleFileUpload(files[0]);\r\n    }\r\n  }, []);\r\n\r\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (files && files.length > 0) {\r\n      handleFileUpload(files[0]);\r\n    }\r\n  };\r\n\r\n  // Загрузка напрямую в API2\r\n  const uploadToApi2 = async () => {\r\n    if (!api2File) {\r\n      setApi2Msg('Выберите файл');\r\n      return;\r\n    }\r\n    setApi2Loading(true);\r\n    setApi2Msg('Загрузка...');\r\n    try {\r\n      const fd = new FormData();\r\n      fd.append('file', api2File);\r\n      // без credentials — чтобы не упереться в CORS\r\n      const res = await fetch(`${API2}/upload`, { method: 'POST', body: fd });\r\n      if (!res.ok) {\r\n        const t = await res.text();\r\n        setApi2Msg(`Ошибка: ${res.status} ${t}`);\r\n        return;\r\n      }\r\n      const json = await res.json().catch(() => ({}));\r\n      setApi2Msg(`✔ API2: импортировано ${json.imported ?? json.count ?? 'ok'}`);\r\n\r\n      // Теперь получаем загруженные данные для отображения\r\n      try {\r\n        const dataRes = await fetch(`${API2}/state/records`);\r\n        if (dataRes.ok) {\r\n          const dataJson = await dataRes.json();\r\n          setApi2Data(dataJson.records || []);\r\n        }\r\n      } catch (err) {\r\n        console.warn('Не удалось получить данные для отображения:', err);\r\n      }\r\n    } catch (err: any) {\r\n      setApi2Msg(`Ошибка: ${err.message || String(err)}`);\r\n    } finally {\r\n      setApi2Loading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (file: File) => {\r\n    setIsUploading(true);\r\n    setUploadResult(null);\r\n\r\n    try {\r\n      // Отправляем файл на бэкенд\r\n      const result = await uploadFile(file);\r\n      setUploadResult(result);\r\n    } catch (error) {\r\n      setUploadResult({\r\n        success: false,\r\n        message: `Ошибка при обработке файла: ${(error as Error).message}`,\r\n        processedCount: 0,\r\n        errorCount: 1,\r\n        errors: [(error as Error).message]\r\n      });\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const clearResults = () => {\r\n    setUploadResult(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto space-y-8\">\r\n      {/* Заголовок */}\r\n      <div>\r\n        <h1 className=\"text-3xl font-bold text-gray-900\">Загрузка данных предприятий</h1>\r\n        <p className=\"text-gray-600 mt-2\">\r\n          Загрузите файл CSV или Excel с данными о предприятиях Москвы для анализа\r\n        </p>\r\n      </div>\r\n\r\n      {/* Зона загрузки */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border\">\r\n        <div\r\n          className={`\r\n            border-2 border-dashed rounded-lg p-12 text-center transition-colors\r\n            ${isDragging \r\n              ? 'border-blue-400 bg-blue-50' \r\n              : 'border-gray-300 hover:border-gray-400'\r\n            }\r\n          `}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onDrop={handleDrop}\r\n        >\r\n          <div className=\"flex flex-col items-center space-y-4\">\r\n            <div className=\"p-4 bg-gray-100 rounded-full\">\r\n              <Upload className=\"w-8 h-8 text-gray-600\" />\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                Перетащите файл сюда или в��берите файл\r\n              </h3>\r\n              <p className=\"text-gray-500 mt-1\">\r\n                Поддерживаются форматы: CSV, Excel (XLSX, XLS)\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col sm:flex-row gap-4\">\r\n              <label className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 cursor-pointer transition-colors\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".csv,.xlsx,.xls\"\r\n                  onChange={handleFileSelect}\r\n                  className=\"hidden\"\r\n                />\r\n                Выбрать файл\r\n              </label>\r\n\r\n              <button\r\n                onClick={() => {\r\n                  // Загружаем демонстрационные данные\r\n                  const demoResult: UploadResult = {\r\n                    success: true,\r\n                    message: 'Загружены демонстрационные данные',\r\n                    processedCount: 100,\r\n                    errorCount: 5,\r\n                    errors: [\r\n                      'Строка 15: Некорректная отрасль',\r\n                      'Строка 23: Отсутствует адрес',\r\n                      'Строка 34: Некорректное количество сотрудников',\r\n                      'Строка 67: Некорректный регион',\r\n                      'Строка 89: Некорректная выручка'\r\n                    ]\r\n                  };\r\n                  setUploadResult(demoResult);\r\n                }}\r\n                className=\"border border-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-50 transition-colors\"\r\n              >\r\n                Загрузить демо-данные\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Индикатор загрузки */}\r\n      {isUploading && (\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"></div>\r\n            <div>\r\n              <p className=\"font-medium text-blue-900\">Обработка файла...</p>\r\n              <p className=\"text-blue-700 text-sm\">Пожалуйста, подождите</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Результат загрузки */}\r\n      {uploadResult && (\r\n        <div className={`\r\n          rounded-lg p-6 border\r\n          ${uploadResult.success \r\n            ? 'bg-green-50 border-green-200' \r\n            : 'bg-red-50 border-red-200'\r\n          }\r\n        `}>\r\n          <div className=\"flex items-start justify-between\">\r\n            <div className=\"flex items-start space-x-3\">\r\n              {uploadResult.success ? (\r\n                <CheckCircle className=\"w-6 h-6 text-green-600 flex-shrink-0\" />\r\n              ) : (\r\n                <AlertCircle className=\"w-6 h-6 text-red-600 flex-shrink-0\" />\r\n              )}\r\n              <div>\r\n                <h3 className={`font-semibold ${\r\n                  uploadResult.success ? 'text-green-900' : 'text-red-900'\r\n                }`}>\r\n                  {uploadResult.success ? 'Загрузка завершена' : 'Ошибка загрузки'}\r\n                </h3>\r\n                <p className={`mt-1 ${\r\n                  uploadResult.success ? 'text-green-700' : 'text-red-700'\r\n                }`}>\r\n                  {uploadResult.message}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={clearResults}\r\n              className=\"text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <X className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Статистика */}\r\n          <div className=\"mt-4 grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n            <div className=\"bg-white p-4 rounded-lg border\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-2xl font-bold text-green-600\">{uploadResult.processedCount}</p>\r\n                <p className=\"text-sm text-gray-600\">Обработано записей</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-white p-4 rounded-lg border\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-2xl font-bold text-red-600\">{uploadResult.errorCount}</p>\r\n                <p className=\"text-sm text-gray-600\">Ошибок</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Ошибки */}\r\n          {uploadResult.errors.length > 0 && (\r\n            <div className=\"mt-4\">\r\n              <h4 className=\"font-medium text-gray-900 mb-2\">Найденные ошибки:</h4>\r\n              <div className=\"bg-white rounded-lg border max-h-40 overflow-y-auto\">\r\n                <div className=\"p-4 space-y-2\">\r\n                  {uploadResult.errors.slice(0, 10).map((error, index) => (\r\n                    <div key={index} className=\"flex items-start space-x-2\">\r\n                      <div className=\"w-2 h-2 bg-red-400 rounded-full mt-2 flex-shrink-0\"></div>\r\n                      <p className=\"text-sm text-gray-700\">{error}</p>\r\n                    </div>\r\n                  ))}\r\n                  {uploadResult.errors.length > 10 && (\r\n                    <p className=\"text-sm text-gray-500 italic\">\r\n                      И ещё {uploadResult.errors.length - 10} ошибок...\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Второй API (новый формат) */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-3\">\r\n          Второй API (новый формат)\r\n        </h2>\r\n        <div className=\"flex flex-col sm:flex-row gap-4 items-center\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".csv,.xlsx,.xls\"\r\n            onChange={(e) => setApi2File(e.target.files?.[0] || null)}\r\n            className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\r\n          />\r\n          <button\r\n            className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors whitespace-nowrap\"\r\n            onClick={uploadToApi2}\r\n            disabled={!api2File}\r\n          >\r\n            Загрузить в API2\r\n          </button>\r\n        </div>\r\n        <p className=\"text-xs text-gray-500 mt-2\">Отправка на: {API2}/upload</p>\r\n        {api2Msg && (\r\n          <div className={`mt-3 p-3 rounded-lg text-sm ${\r\n            api2Msg.includes('✔') \r\n              ? 'bg-green-50 text-green-800 border border-green-200' \r\n              : api2Msg.includes('Ошибка') \r\n                ? 'bg-red-50 text-red-800 border border-red-200'\r\n                : 'bg-blue-50 text-blue-800 border border-blue-200'\r\n          }`}>\r\n            {api2Msg}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Индикатор загрузки API2 */}\r\n      {api2Loading && (\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"></div>\r\n            <div>\r\n              <p className=\"font-medium text-blue-900\">Загрузка в API2...</p>\r\n              <p className=\"text-blue-700 text-sm\">Обработка файла и получение данных</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Отображение данных из API2 */}\r\n      {api2Data.length > 0 && (\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">\r\n              Данные из API2 ({api2Data.length} записей)\r\n            </h3>\r\n            <button\r\n              onClick={() => setApi2Data([])}\r\n              className=\"text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <X className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Статистика API2 */}\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6\">\r\n            <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-2xl font-bold text-blue-600\">{api2Data.length}</p>\r\n                <p className=\"text-sm text-blue-800\">Всего записей</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-2xl font-bold text-green-600\">\r\n                  {api2Data.filter(item => item.inn).length}\r\n                </p>\r\n                <p className=\"text-sm text-green-800\">С ИНН</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-purple-50 p-4 rounded-lg border border-purple-200\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-2xl font-bold text-purple-600\">\r\n                  {api2Data.filter(item => item.naimenovanie_organizacii).length}\r\n                </p>\r\n                <p className=\"text-sm text-purple-800\">С названием</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Таблица с данными */}\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    ИНН\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Название организации\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Основная отрасль\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Статус\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Адрес\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {api2Data.slice(0, 10).map((item, index) => (\r\n                  <tr key={index} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {item.inn || '-'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n                      {item.naimenovanie_organizacii || item.polnoe_naimenovanie_organizacii || '-'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {item.osnovnaya_otrasl || '-'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\r\n                        item.status_itog === 'Активно' || item.status_spark === 'Действующая' \r\n                          ? 'bg-green-100 text-green-800'\r\n                          : 'bg-gray-100 text-gray-800'\r\n                      }`}>\r\n                        {item.status_itog || item.status_spark || '-'}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\r\n                      {item.yuridicheskii_adres || item.adres_proizvodstva || '-'}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {api2Data.length > 10 && (\r\n            <div className=\"mt-4 text-center\">\r\n              <p className=\"text-sm text-gray-600\">\r\n                Показано 10 из {api2Data.length} записей.\r\n                <span className=\"text-blue-600 ml-1\">Полные данные доступны через API</span>\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Кнопки для работы с данными API2 */}\r\n          <div className=\"mt-6 flex flex-wrap gap-3\">\r\n            <button\r\n              onClick={async () => {\r\n                try {\r\n                  const response = await fetch(`${API2}/state/records`);\r\n                  if (response.ok) {\r\n                    const data = await response.json();\r\n                    setApi2Data(data.records || []);\r\n                    setApi2Msg(`✔ Обновлено: ${data.records?.length || 0} записей`);\r\n                  }\r\n                } catch (err) {\r\n                  setApi2Msg('Ошибка обновления данных');\r\n                }\r\n              }}\r\n              className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors text-sm\"\r\n            >\r\n              Обновить данные\r\n            </button>\r\n            <button\r\n              onClick={async () => {\r\n                try {\r\n                  const response = await fetch(`${API2}/state/clear`, { method: 'POST' });\r\n                  if (response.ok) {\r\n                    setApi2Data([]);\r\n                    setApi2Msg('✔ Данные очищены');\r\n                  }\r\n                } catch (err) {\r\n                  setApi2Msg('Ошибка очистки данных');\r\n                }\r\n              }}\r\n              className=\"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors text-sm\"\r\n            >\r\n              Очистить данные\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                const jsonString = JSON.stringify(api2Data, null, 2);\r\n                const blob = new Blob([jsonString], { type: 'application/json' });\r\n                const url = URL.createObjectURL(blob);\r\n                const a = document.createElement('a');\r\n                a.href = url;\r\n                a.download = `api2_data_${new Date().toISOString().split('T')[0]}.json`;\r\n                a.click();\r\n                URL.revokeObjectURL(url);\r\n              }}\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm\"\r\n            >\r\n              Скачать JSON\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Инструкции */}\r\n      <div className=\"bg-gray-50 rounded-lg p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Формат данных</h3>\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-gray-700\">\r\n            Файл должен содержать следующие столбцы:\r\n          </p>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">name</span> - Название предприятия\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">industry</span> - Отрасль\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">region</span> - Регион Москвы\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">employees</span> - Количество сотрудников\r\n              </div>\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">revenue</span> - Выручка (руб.)\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">address</span> - Адрес\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">phone</span> - Телефон (опционально)\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"font-medium\">email</span> - Email (опционально)\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}